%YAML 1.2
---
scalar_functions:
  -
    name: "add"
    description: "Add two values."
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
          - name: y
            value: i8
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
          - name: y
            value: i16
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
          - name: y
            value: i32
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - value: i64
          - value: i64
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
          - name: y
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
          - name: y
            value: fp64
        return: fp64
  -
    name: "subtract"
    description: "Subtract one value from another."
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
          - name: y
            value: i8
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
          - name: y
            value: i16
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
          - name: y
            value: i32
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
          - name: y
            value: i64
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
          - name: y
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
          - name: y
            value: fp64
        return: fp64
  -
    name: "multiply"
    description: "Multiply two values."
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
          - name: y
            value: i8
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
          - name: y
            value: i16
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
          - name: y
            value: i32
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
          - name: y
            value: i64
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
          - name: y
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
          - name: y
            value: fp64
        return: fp64
  -
    name: "divide"
    description: "Divide one value by another. Partial values are truncated."
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
          - name: y
            value: i8
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
          - name: y
            value: i16
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
          - name: y
            value: i32
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
          - name: y
            value: i64
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
          - name: y
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
          - name: y
            value: fp64
        return: fp64
  -
    name: "negate"
    description: "Negation of the value"
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
        return: i64
      - args:
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: x
            value: fp64
        return: fp64
  -
    name: "modulus"
    description: "Get the remainder when dividing one value by another."
    impls:
      - args:
          - name: x
            value: i8
          - name: y
            value: i8
        return: i8
      - args:
          - name: x
            value: i16
          - name: y
            value: i16
        return: i16
      - args:
          - name: x
            value: i32
          - name: y
            value: i32
        return: i32
      - args:
          - name: x
            value: i64
          - name: y
            value: i64
        return: i64
  -
    name: "power"
    description: "Take the power with x as the base and y as exponent."
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
          - name: y
            value: i64
        return: i64
      - args:
          - name: x
            value: fp32
          - name: y
            value: fp32
        return: fp32
      - args:
          - name: x
            value: fp64
          - name: y
            value: fp64
        return: fp64
  -
    name: "sqrt"
    description: "Square root of the value"
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: i64
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "exp"
    description: "The mathematical constant e, raised to the power of the value."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "cos"
    description: "Get the cosine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "sin"
    description: "Get the sine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "tan"
    description: "Get the tangent of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "cosh"
    description: "Get the hyperbolic cosine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "sinh"
    description: "Get the hyperbolic sine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "tanh"
    description: "Get the hyperbolic tangent of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "acos"
    description: "Get the arccosine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "asin"
    description: "Get the arcsine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "atan"
    description: "Get the arctangent of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "acosh"
    description: "Get the hyperbolic arccosine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "asinh"
    description: "Get the hyperbolic arcsine of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "atanh"
    description: "Get the hyperbolic arctangent of a value in radians."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
        return: fp64
  -
    name: "atan2"
    description: "Get the arctangent of values given as x/y pairs."
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp32
          - name: y
            value: fp32
        return: fp64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: on_domain_error
            options: [ NAN, ERROR ]
            required: false
          - name: x
            value: fp64
          - name: y
            value: fp64
        return: fp64
  -
    name: "abs"
    description: >
      Calculate the absolute value of the argument.

      Integer values allow the specification of overflow behavior to handle the
      unevenness of the twos complement, e.g. Int8 range [-128 : 127].
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
        return: i64
      - args:
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: x
            value: fp64
        return: fp64
  -
    name: "sign"
    description: >
      Return the signedness of the argument.

      Integer values return signedness with the same type as the input.
      Possible return values are [-1, 0, 1]

      Floating point values return signedness with the same type as the input.
      Possible return values are [-1.0, -0.0, 0.0, 1.0, NaN]
    impls:
      - args:
          - name: x
            value: i8
        return: i8
      - args:
          - name: x
            value: i16
        return: i16
      - args:
          - name: x
            value: i32
        return: i32
      - args:
          - name: x
            value: i64
        return: i64
      - args:
          - name: x
            value: fp32
        return: fp32
      - args:
          - name: x
            value: fp64
        return: fp64
  -
    name: "factorial"
    description: >
      Return the factorial of a given integer input.

      The factorial of 0! is 1 by convention.

      Negative inputs will raise an error.
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - value: i32
            name: "n"
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - value: i64
            name: "n"
        return: i64

aggregate_functions:
  - name: "sum"
    description: Sum a set of values. The sum of zero elements yields null.
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i64?
        return: i64?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i64?
        return: i64?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i64?
        return: i64?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i64?
        return: i64?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: fp32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: fp64?
        return: fp64?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: fp64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: fp64?
        return: fp64?
  - name: "avg"
    description: Average a set of values. For integral types, this truncates partial values.
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: "STRUCT<i64,i64>"
        return: i8?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: "STRUCT<i64,i64>"
        return: i16?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: "STRUCT<i64,i64>"
        return: i32?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: "STRUCT<i64,i64>"
        return: i64?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: fp32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: "STRUCT<fp64,i64>"
        return: fp32?
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: fp64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: "STRUCT<fp64,i64>"
        return: fp64?
  - name: "min"
    description: Min a set of values.
    impls:
      - args:
          - name: x
            value: i8
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i8?
        return: i8?
      - args:
          - name: x
            value: i16
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i16?
        return: i16?
      - args:
          - name: x
            value: i32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i32?
        return: i32?
      - args:
          - name: x
            value: i64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i64?
        return: i64?
      - args:
          - name: x
            value: fp32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: fp32?
        return: fp32?
      - args:
          - name: x
            value: fp64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: fp64?
        return: fp64?
  - name: "max"
    description: Max a set of values.
    impls:
      - args:
          - name: x
            value: i8
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i8?
        return: i8?
      - args:
          - name: x
            value: i16
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i16?
        return: i16?
      - args:
          - name: x
            value: i32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i32?
        return: i32?
      - args:
          - name: x
            value: i64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: i64?
        return: i64?
      - args:
          - name: x
            value: fp32
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: fp32?
        return: fp32?
      - args:
          - name: x
            value: fp64
        nullability: DECLARED_OUTPUT
        decomposable: MANY
        intermediate: fp64?
        return: fp64?
  - name: "product"
    description: Product of a set of values. Returns 1 for empty input.
    impls:
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i8
        nullability: MIRROR
        decomposable: MANY
        intermediate: i64
        return: i8
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i16
        nullability: MIRROR
        decomposable: MANY
        intermediate: i64
        return: i16
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i32
        nullability: MIRROR
        decomposable: MANY
        intermediate: i64
        return: i32
      - args:
          - name: overflow
            options: [ SILENT, SATURATE, ERROR ]
            required: false
          - name: x
            value: i64
        nullability: MIRROR
        decomposable: MANY
        intermediate: i64
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp32
        nullability: MIRROR
        decomposable: MANY
        intermediate: fp64
        return: fp32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: x
            value: fp64
        nullability: MIRROR
        decomposable: MANY
        intermediate: fp64
        return: fp64
  - name: "std_dev"
    description: Calculates standard-deviation for a set of values.
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: distribution
            options: [ SAMPLE, POPULATION]
            required: false
          - name: x
            value: fp32
        nullability: DECLARED_OUTPUT
        return: fp32?
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: distribution
            options: [ SAMPLE, POPULATION]
            required: false
          - name: x
            value: fp64
        nullability: DECLARED_OUTPUT
        return: fp64?
  - name: "variance"
    description: Calculates variance for a set of values.
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: distribution
            options: [ SAMPLE, POPULATION]
            required: false
          - name: x
            value: fp32
        nullability: DECLARED_OUTPUT
        return: fp32?
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - name: distribution
            options: [ SAMPLE, POPULATION]
            required: false
          - name: x
            value: fp64
        nullability: DECLARED_OUTPUT
        return: fp64?
  - name: "corr"
    description: >
      Calculates correlation of two set of values.
      If there is no input, null is returned.
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: fp32
          - value: fp32
        nullability: DECLARED_OUTPUT
        return: fp32?
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: fp64
          - value: fp64
        nullability: DECLARED_OUTPUT
        return: fp64?
  - name: "mode"
    description: >
      Calculates mode for a set of values.
      If there is no input, null is returned.
    impls:
      - args:
          - value: i8
        nullability: DECLARED_OUTPUT
        return: i8?
      - args:
          - value: i16
        nullability: DECLARED_OUTPUT
        return: i16?
      - args:
          - value: i32
        nullability: DECLARED_OUTPUT
        return: i32?
      - args:
          - value: i64
        nullability: DECLARED_OUTPUT
        return: i64?
      - args:
          - value: fp32
        nullability: DECLARED_OUTPUT
        return: fp32?
      - args:
          - value: fp64
        nullability: DECLARED_OUTPUT
        return: fp64?
  - name: "median"
    description: >
      Calculate the median for a set of values.

      Returns null if applied to zero records. For the integer implementations,
      the rounding option determines how the median should be rounded if it ends
      up midway between two values. For the floating point implementations,
      they specify the usual floating point rounding mode.
    impls:
      - args:
          - name: precision
            description: >
              Based on required operator performance and configured optimizations
              on saving memory bandwidth, the precision of the end result can be
              the highest possible accuracy or an approximation.

                - EXACT: provides the exact result, rounded if needed according
                  to the rounding option.
                - APPROXIMATE: provides only an estimate; the result must lie
                  between the minimum and maximum values in the input
                  (inclusive), but otherwise the accuracy is left up to the
                  consumer.
            options: [ EXACT, APPROXIMATE ]
            required: true
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i8
        nullability: DECLARED_OUTPUT
        return: i8?
      - args:
          - name: precision
            description: >
              Based on required operator performance and configured optimizations
              on saving memory bandwidth, the precision of the end result can be
              the highest possible accuracy or an approximation.

                - EXACT: provides the exact result, rounded if needed according
                  to the rounding option.
                - APPROXIMATE: provides only an estimate; the result must lie
                  between the minimum and maximum values in the input
                  (inclusive), but otherwise the accuracy is left up to the
                  consumer.
            options: [ EXACT, APPROXIMATE ]
            required: true
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i16
        nullability: DECLARED_OUTPUT
        return: i16?
      - args:
          - name: precision
            description: >
              Based on required operator performance and configured optimizations
              on saving memory bandwidth, the precision of the end result can be
              the highest possible accuracy or an approximation.

                - EXACT: provides the exact result, rounded if needed according
                  to the rounding option.
                - APPROXIMATE: provides only an estimate; the result must lie
                  between the minimum and maximum values in the input
                  (inclusive), but otherwise the accuracy is left up to the
                  consumer.
            options: [ EXACT, APPROXIMATE ]
            required: true
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i32
        nullability: DECLARED_OUTPUT
        return: i32?
      - args:
          - name: precision
            description: >
              Based on required operator performance and configured optimizations
              on saving memory bandwidth, the precision of the end result can be
              the highest possible accuracy or an approximation.

                - EXACT: provides the exact result, rounded if needed according
                  to the rounding option.
                - APPROXIMATE: provides only an estimate; the result must lie
                  between the minimum and maximum values in the input
                  (inclusive), but otherwise the accuracy is left up to the
                  consumer.
            options: [ EXACT, APPROXIMATE ]
            required: true
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
        nullability: DECLARED_OUTPUT
        return: i64?
      - args:
          - name: precision
            description: >
              Based on required operator performance and configured optimizations
              on saving memory bandwidth, the precision of the end result can be
              the highest possible accuracy or an approximation.

                - EXACT: provides the exact result, rounded if needed according
                  to the rounding option.
                - APPROXIMATE: provides only an estimate; the result must lie
                  between the minimum and maximum values in the input
                  (inclusive), but otherwise the accuracy is left up to the
                  consumer.
            options: [ EXACT, APPROXIMATE ]
            required: true
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: fp32
        nullability: DECLARED_OUTPUT
        return: fp32?
      - args:
          - name: precision
            description: >
              Based on required operator performance and configured optimizations
              on saving memory bandwidth, the precision of the end result can be
              the highest possible accuracy or an approximation.

                - EXACT: provides the exact result, rounded if needed according
                  to the rounding option.
                - APPROXIMATE: provides only an estimate; the result must lie
                  between the minimum and maximum values in the input
                  (inclusive), but otherwise the accuracy is left up to the
                  consumer.
            options: [ EXACT, APPROXIMATE ]
            required: true
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: fp64
        nullability: DECLARED_OUTPUT
        return: fp64?
  - name: "quantile"
      description: Calculates quantile for a set of values.
      impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i8
        nullability: DECLARED_OUTPUT
        return: i8
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i16
        nullability: DECLARED_OUTPUT
        return: i16
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i32
        nullability: DECLARED_OUTPUT
        return: i32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i64
        nullability: DECLARED_OUTPUT
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: f32
        nullability: DECLARED_OUTPUT
        return: f32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: f64
        nullability: DECLARED_OUTPUT
        return: f64
  - name: "approx_quantile"
    description: Calculates approximate quantile for a set of values.
    impls:
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i8
        nullability: DECLARED_OUTPUT
        return: i8
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i16
        nullability: DECLARED_OUTPUT
        return: i16
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i32
        nullability: DECLARED_OUTPUT
        return: i32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: i64
        nullability: DECLARED_OUTPUT
        return: i64
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: f32
        nullability: DECLARED_OUTPUT
        return: f32
      - args:
          - name: rounding
            options: [ TIE_TO_EVEN, TIE_AWAY_FROM_ZERO, TRUNCATE, CEILING, FLOOR ]
            required: false
          - value: i64
          - value: f64
        nullability: DECLARED_OUTPUT
        return: f64

window_functions:
  - name: "row_number"
    description: "the number of the current row within its partition."
    impls:
      - args: []
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: i64?
        window_type: PARTITION
  - name: "rank"
    description: "the rank of the current row, with gaps."
    impls:
      - args: []
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: i64?
        window_type: PARTITION
  - name: "dense_rank"
    description: "the rank of the current row, without gaps."
    impls:
      - args: []
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: i64?
        window_type: PARTITION
  - name: "percent_rank"
    description: "the relative rank of the current row."
    impls:
      - args: []
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: fp64?
        window_type: PARTITION
  - name: "cume_dist"
    description: "the cumulative distribution."
    impls:
      - args: []
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: fp64?
        window_type: PARTITION
  - name: "ntile"
    description: "Return an integer ranging from 1 to the argument value,dividing the partition as equally as possible."
    impls:
      - args:
          - name: x
            value: i32
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: i32?
        window_type: PARTITION
      - args:
          - name: x
            value: i64
        nullability: DECLARED_OUTPUT
        decomposable: NONE
        return: i64?
        window_type: PARTITION
